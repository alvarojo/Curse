# Configuration file

client {
    # Clears the baked models generated in the first pass *before* entering the second pass, instead of *after*. While this doesn't reduce memory usage in-game, it does reduce it noticeably during loading. [default: true]
    B:clearDuplicateModelRegistry=true

    # Enable deduplication of redundant objects in memory. [default: true]
    B:deduplicateModels=true

    # The maximum amount of levels of recursion for the deduplication process. Smaller values will deduplicate less data, but make the process run faster. [default: 6, range: 1-2147483647]
    I:deduplicateModelsMaxRecursion=6
}


coremod {
    B:blacklistLibraryTransformers=true
    B:dynamicItemModels=true
    B:optimizedBlockInfo=true
    B:optimizedBlockPos=true
    B:replaceWorldSimpleName=true
    B:smallPropertyStorage=true
}


experimental {
    B:chunkedBlockInfo=false
    B:fasterVertexLighter=true
    B:parallelModelBaking=true
    B:smallLightingOptimize=true
    B:smallPropertyStorage=true
}


expert {
    B:immediateLightingUpdates=false
}


general {
    B:clearDuplicateModelRegistry=true
    B:deduplicate=true

    # Makes large FML registries scale their availability BitSets dynamically, saving ~48MB of RAM. [default: true]
    B:dynamicRegistrySizeScaling=true
}


launchwrapper {
    B:dummyPackageManifestMap=true

    # Weaken LaunchWrapper's byte[] resource cache to make it cleanuppable by the GC. Safe. [default: true]
    B:weakenResourceCache=true
}


tweaks {
    # Prevent redstone from causing light updates by removing its light level. [default: false]
    B:disableRedstoneLight=false
}


